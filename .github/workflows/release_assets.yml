name: Build release assets

on:
  repository_dispatch:
    types: [ release-created ]

jobs:
  native_build:
    strategy:
      fail-fast: false
      matrix:
        platform: [ ubuntu-22.04 ]  # Old version of Ubuntu to build with an older version of glibc
    runs-on: ${{ matrix.platform }}
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Update toolchain
        run: rustup install stable
      #      - uses: Swatinem/rust-cache@v2

      - name: Build in Release profile with all features enabled
        run: cargo build --release --all-features

      - name: Rename Release (Unix)
        run: |
          cargo install default-target
          CRATE_NAME=$(cargo metadata --no-deps --format-version=1 | jq -r '.packages[0].name')
          mkdir -p assets
          FILENAME=${CRATE_NAME}-${{ github.event.client_payload.tag }}-$(default-target)
          mv target/release/$CRATE_NAME assets
          cd assets
          tar --format=ustar -czf $FILENAME.tar.gz $CRATE_NAME
          rm $CRATE_NAME
          ls .
        if: ${{ matrix.platform != 'windows-latest' }}
        shell: bash

      #      - name: Rename Release (Windows)
      #        run: |
      #          cargo install default-target
      #          CRATE_NAME=$(cargo metadata --no-deps --format-version=1 | jq -r '.packages[0].name')
      #          mkdir assets
      #          FILENAME=${CRATE_NAME}-${{ github.event.client_payload.tag }}-$(default-target)
      #          mv target/release/${CRATE_NAME}.exe assets
      #          cd assets
      #          powershell Compress-Archive -Path * -Destination ${FILENAME}.zip
      #          rm ${CRATE_NAME}.exe
      #          ls .
      #        if: ${{ matrix.platform == 'windows-latest' }}
      #        shell: bash

      - name: Upload assets
        run:
          gh release upload "${{ github.event.client_payload.tag }}" assets/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
